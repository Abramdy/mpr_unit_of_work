import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;

import domain.EnumerationValue;
import domain.PagingInfo;
import domain.User;
import repo.IRepositoryCatalog;
import repo.impl.RepositoryCatalog;
import uow.IUnitOfWork;
import uow.UnitOfWork;

public class Main {

	public static void main(String[] args) {

		String url = "jdbc:hsqldb:hsql://localhost/workdb";

		try {
			Connection connection = DriverManager.getConnection(url);
			IUnitOfWork uow = new UnitOfWork(connection);
			
			IRepositoryCatalog catalog = new RepositoryCatalog(connection, uow);
			PagingInfo page = new PagingInfo();
			
			//
			// ----- ----- ----- User ----- ----- -----
			//
			String dropUserTableIfExistsSql = "DROP TABLE t_sys_users IF EXISTS;";
			Statement dropTable = connection.createStatement();
			dropTable.executeUpdate(dropUserTableIfExistsSql);
			
			String createUserTableSql = 
				"CREATE TABLE t_sys_users("
				+ "id int GENERATED BY DEFAULT AS IDENTITY,"
				+ "login VARCHAR(20),"
				+ "password VARCHAR(20)"
				+ ")";
			Statement createTable = connection.createStatement();
			createTable.executeUpdate(createUserTableSql);
			
			User user0 = new User();
			user0.setLogin("Dawid");
			user0.setPassword("Jancen");
			
			User user1 = new User();
			user1.setLogin("Jan");
			user1.setPassword("Nowak");
			
			User user2 = new User();
			user2.setLogin("Roman");
			user2.setPassword("Kowalski");
			
			catalog.users().add(user0);
			catalog.users().add(user1);
			catalog.users().add(user2);
			uow.saveChanges();
			
			List<User> usersFromDb = catalog.users().allOnPage(page);
			
			for (User userFromDb: catalog.users().allOnPage(page))
				System.out.println(
					userFromDb.getId()+" "+
					userFromDb.getLogin()+" "+
					userFromDb.getPassword()
				);
			
			User u = catalog.users().withId(0);
			u.setPassword("12345");
			catalog.users().modify(u);
			uow.saveChanges();

			catalog.users().delete(usersFromDb.get(2));
			uow.saveChanges();
			
			System.out.println("--- --- ---");
		
			for (User userFromDb: catalog.users().allOnPage(page))
				System.out.println(
					userFromDb.getId()+" "+
					userFromDb.getLogin()+" "+
					userFromDb.getPassword()
				);
			
			System.out.println("--- --- ---");

			//
			// ----- ----- ----- EnumerationValue ----- ----- -----
			//
			String dropEnumerationValueTableIfExistsSql = "DROP TABLE t_sys_enums IF EXISTS;";
			Statement dropEnumerationValueTable = connection.createStatement();
			dropTable.executeUpdate(dropEnumerationValueTableIfExistsSql);
			
			String createEnumerationValueTableSql = 
				"CREATE TABLE t_sys_enums("
				+ "id int GENERATED BY DEFAULT AS IDENTITY,"
				+ "intKey int,"
				+ "stringKey VARCHAR(20),"
				+ "name VARCHAR(20),"
				+ "value VARCHAR(20),"
				+ ")";
			Statement createEnumerationValueTable = connection.createStatement();
			createTable.executeUpdate(createEnumerationValueTableSql);
			
			EnumerationValue enum0 = new EnumerationValue();
			enum0.setIntKey(0);
			enum0.setStringKey("enum0");
			enum0.setName("Enum0");
			enum0.setValue("EnumZeroValue");
			
			EnumerationValue enum1 = new EnumerationValue();
			enum1.setIntKey(1);
			enum1.setStringKey("enum1");
			enum1.setName("Enum1");
			enum1.setValue("EnumOneValue");
			
			EnumerationValue enum2 = new EnumerationValue();
			enum2.setIntKey(2);
			enum2.setStringKey("enum2");
			enum2.setName("Enum2");
			enum2.setValue("EnumTwoValue");
			
			catalog.enumerations().add(enum0);
			catalog.enumerations().add(enum1);
			catalog.enumerations().add(enum2);
			uow.saveChanges();

			List<EnumerationValue> enumsFromDb = catalog.enumerations().allOnPage(page);
			
			for (EnumerationValue enumFromDb: enumsFromDb)
				System.out.println(
					enumFromDb.getId()+" "+
					enumFromDb.getIntKey()+" "+
					enumFromDb.getStringKey()+" "+
					enumFromDb.getName()+" "+
					enumFromDb.getValue()
				);
			
			EnumerationValue en = catalog.enumerations().withId(2);
			en.setValue("NewEnumValue");
			catalog.enumerations().modify(en);
			uow.saveChanges();

			catalog.enumerations().delete(enumsFromDb.get(0));
			uow.saveChanges();
			
			System.out.println("--- --- ---");
		
			for (EnumerationValue enumFromDb: catalog.enumerations().allOnPage(page))
				System.out.println(
					enumFromDb.getId()+" "+
					enumFromDb.getIntKey()+" "+
					enumFromDb.getStringKey()+" "+
					enumFromDb.getName()+" "+
					enumFromDb.getValue()
				);
			
		} catch (SQLException e) {
			e.printStackTrace();
		}

		System.out.println("Done!");
		
	}

}
